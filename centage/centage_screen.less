
/* THANK YOU, THE FOLLOWING ARE CALCULATED VARIABLES FOR YOUR PLEASURE */
/* ------------------------------------------------------------------- */
/* gutterless column width */
@col1:100% / @grid;

/* column width when gutters are used */
@col1_gut:(100% - @gut * (@grid - 1)) / @grid;

/*column + gutter */
@col1_plus_gut:@col1_gut + @gut;

/*the true leading = line height - font size*/
@leading:@line - @fontpxem; 

/* -------------------------------------------------------------------- */

@fontpxem:@fontpx * 1em; /*this is needed for calculations*/
@linepxem:@linepx * 1em; /*this is needed for calculations*/

/* -------------------------------------------------------------------- */
/* @group reset */
/* You can use your preferred reset instead, this one is based on Blueprint CSS reset sheet */

html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, xmp {
	margin:0;
	padding:0;
	border:0;
	font-weight:inherit;
	font-style:inherit;
	font-size:100%;
	font-family:inherit;
	vertical-align:baseline; }
	
table {
	border-collapse:separate;
	border-spacing:0; }

a img {
	border:none; }
/* @end */

/* @group body styles */

body {
	font-family: @font;
	font-size: @bodyfont;
	line-height: @line;}

/* @end */


/* content area standard properties, IF you need content to overflow visibly, use .clearfix after .col/.sub_col to override default*/
.mod{
	float:left;
	overflow:hidden;}
	
/*main level column */	
.col(@col_count:1, @pad_top:0, @pad_right:0, @pad_bottom:0, @pad_left:0) {
	width:((@col1_gut * @col_count) + (@gut * (@col_count - 1)) - @pad_left - @pad_right);
	*width:(@col1_gut * @col_count) + (@gut * (@col_count - 1)) - 0.1% - @pad_left - @pad_right;/* for IE */
	.mod; 
	margin-right:@gut;
	padding-top:@pad_top;
	padding-right:@pad_right;
	padding-bottom:@pad_bottom;
	padding-left:@pad_left;	
	}

/*column inside parent container element */
.sub-col(@parent_cols:1, @sub_cols:1, @pad_top:0, @pad_right:0, @pad_bottom:0, @pad_left:0){
	width:((100 / (@parent_cols * @col1_gut + (@parent_cols * @gut - @gut))) * (@sub_cols * @col1_gut + (@sub_cols * @gut - @gut)) - @pad_left - @pad_right);/* for IE */	
	*width:((100 / (@parent_cols * @col1_gut + (@parent_cols * @gut - @gut))) * (@sub_cols * @col1_gut + (@sub_cols * @gut - @gut))) - 0.1% - @pad_left - @pad_right;
	.mod;
	margin-right:(100 / (@parent_cols * @col1_gut + (@parent_cols * @gut - @gut))) * @gut;
	padding-top:@pad_top;
	padding-right:@pad_right;
	padding-bottom:@pad_bottom;
	padding-left:@pad_left;	
	}


/*column based on full width of page*/
.col-full(@col_count:1, @padd_v:0, @padd_h:0) {
	width:((@col1 * @col_count) - (@padd_h * 2%));
	*width:(@col1 * @col_count) - 0.1% - (@padd_h * 2%);/* for IE */
	.mod; 
	padding-top:@padd_v;
	padding-bottom:@padd_v;
	padding-left:@padd_h;
	padding-right:@padd_h;}

/*columns without gutters*/
.col-nogut(@col_count:1, @padd_v:0, @padd_h:0) {
	@col-halfgut-width:((@col1_gut * @col_count) + (@gut * (@col_count)) - (@padd_h * 2%));
	width: @col-halfgut-width;
	*width:	@col-halfgut-width - 0.1%;/* for IE */
	.mod; 
	padding-top:@padd_v;
	padding-bottom:@padd_v;
	padding-left:@padd_h;
	padding-right:@padd_h;}

/*columns without gutters, first and last of row*/
.col-nogut-first-last(@col_count:1, @padd_v:0, @padd_h:0) {
	@col-halfgut-width:((@col1_gut * @col_count) + (@gut * (@col_count)) - (@padd_h * 2%));
	width: @col-halfgut-width - (0.5 * @gut);
	*width:	@col-halfgut-width - - (0.5 * @gut) - 0.1%;/* for IE */
	.mod; 
	padding-top:@padd_v;
	padding-bottom:@padd_v;
	padding-left:@padd_h;
	padding-right:@padd_h;}

/* helpers to add margins in full column widths */ 
.margin-left(@margin_cols:1){
	margin-left:@col1_plus_gut * @margin_cols;}

.margin-right(@margin_cols:1){
	margin-right:@col1_plus_gut * @margin_cols;}

/* helpers to keep layout in basline grid despite of borders used */
.margin-top(@lines:1, @borders_to_compensate:0){
	margin-top: (@line*@lines) - @borders_to_compensate/@fontpxem;}

.margin-bottom(@lines:1, @borders_to_compensate:0){
	margin-bottom: (@line*@lines) - @borders_to_compensate/@fontpxem;}

.padding-top(@lines:1, @borders_to_compensate:0){
	padding-top: (@line*@lines) - @borders_to_compensate/@fontpxem;}

.padding-bottom(@lines:1, @borders_to_compensate:0){
	padding-bottom: (@line*@lines) - @borders_to_compensate/@fontpxem;}

/* ------------------------------------------------------------------- */

/* last element in row if used inside less */
.last(@align:left) {
	margin-right:0 !important;
	float:@align !important;}

/* if called straight from xhtml */
.last {
	margin-right: 0 !important;}



/* @group other */

.clearfix:after {
	content:"."; 
	display: block; 
	height: 0; 
	clear:both; 
	visibility: hidden
	}

/* @end */


/* @group Grid */
/* This grid is only for development purposes, you can overlay it on top of page to check consistency */

#grid_wrapper,
#grid_no_gut_wrapper {
	position:absolute;
	left:0;
	top:0;
	z-index:100;
	min-width:@min-width;
	width:100%;
	height:2500px;}
	
#grid {
		height:100%;
		
		.grid_col {
			height:100%;
			.col(1);
			background:transparent url(img/grid_fluid.png) repeat-y 0 0;
			position:relative;
			}
		
		#grid_col13 {
			.last(right);}			
			
		.right_grid_colborder {
			position:absolute;
			right:0;
			height:100%;
			background:transparent url(img/grid_fluid.png) repeat-y 0 0;
			background-position-right:-1px;
			width:1px;}
	}

#grid_no_gut {
		height:100%;
	
		.center {
			height:100%;
			width:@gut;
			margin-left:@col1_gut;
			float:left;
			background:transparent url(img/grid_center.png) repeat-y 50% 0;
			position:relative;}
	}	
	
#grid_toggle{
	position:fixed;
	z-index: 1000;
	top:0;
	right: 0;}
/* @end */


/* set the page dimensions */
#wrap,
#grid,
#grid_no_gut{
		max-width: @max-width;
		min-width: @min-width;
		margin:0 auto; 
		overflow: hidden; 
		padding:0 @page-padding;
	}